# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    # Test name: Untitled
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://127.0.0.1:8082/")
    # 2 | setWindowSize | 1319x792 | 
    self.driver.set_window_size(1319, 792)
    # 3 | click | css=body > input | 
    self.driver.find_element(By.CSS_SELECTOR, "body > input").click()
    # 4 | click | id=mytree1.Item.6 | 
    self.driver.find_element(By.ID, "mytree1.Item.6").click()
    # 5 | click | xpath=//div[@id='mytree1.menu.create']/img | 
    self.driver.find_element(By.XPATH, "//div[@id=\'mytree1.menu.create\']/img").click()
    # 6 | click | id=mytree1.Item.62 | 
    self.driver.find_element(By.ID, "mytree1.Item.62").click()
    # 7 | click | id=property.input.Name | 
    self.driver.find_element(By.ID, "property.input.Name").click()
    # 8 | type | id=property.input.Name | Hello
    self.driver.find_element(By.ID, "property.input.Name").send_keys("Hello")
    # 9 | click | id=property.input.DefaultValue | 
    self.driver.find_element(By.ID, "property.input.DefaultValue").click()
    # 10 | click | id=property.input.DefaultValue | 
    self.driver.find_element(By.ID, "property.input.DefaultValue").click()
    # 11 | close |  | 
    self.driver.close()
  
